<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wangku.miaodan.core.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.wangku.miaodan.core.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sum" jdbcType="DECIMAL" property="sum" />
    <result column="vocation" jdbcType="TINYINT" property="vocation" />
    <result column="work_time" jdbcType="TINYINT" property="workTime" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="month_income" jdbcType="TINYINT" property="monthIncome" />
    <result column="wages_type" jdbcType="TINYINT" property="wagesType" />
    <result column="credit_card" jdbcType="TINYINT" property="creditCard" />
    <result column="car" jdbcType="TINYINT" property="car" />
    <result column="building" jdbcType="TINYINT" property="building" />
    <result column="accumulation_fund" jdbcType="TINYINT" property="accumulationFund" />
    <result column="social_insurance" jdbcType="TINYINT" property="socialInsurance" />
    <result column="life_insurance" jdbcType="TINYINT" property="lifeInsurance" />
    <result column="identy_number" jdbcType="VARCHAR" property="identyNumber" />
    <result column="sesame_credit" jdbcType="INTEGER" property="sesameCredit" />
    <result column="wei_li_dai" jdbcType="TINYINT" property="weiLiDai" />
    <result column="apply_time" jdbcType="TIMESTAMP" property="applyTime" />
    <result column="type" jdbcType="TINYINT" property="type" />
    <result column="source_id" jdbcType="VARCHAR" property="sourceId" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <sql id="Base_Column_List">
    id, name, mobile, city, age, sum, vocation, work_time, sex, month_income, wages_type, 
    credit_card, car, building, accumulation_fund, social_insurance, life_insurance, 
    identy_number, sesame_credit, wei_li_dai, apply_time, type, source_id, status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wangku.miaodan.core.model.Order">
    insert into order_info (id, name, mobile, 
      city, age, sum, vocation, 
      work_time, sex, month_income, 
      wages_type, credit_card, car, 
      building, accumulation_fund, social_insurance, 
      life_insurance, identy_number, sesame_credit, 
      wei_li_dai, apply_time, type, 
      source_id, status)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{sum,jdbcType=DECIMAL}, #{vocation,jdbcType=TINYINT}, 
      #{workTime,jdbcType=TINYINT}, #{sex,jdbcType=TINYINT}, #{monthIncome,jdbcType=TINYINT}, 
      #{wagesType,jdbcType=TINYINT}, #{creditCard,jdbcType=TINYINT}, #{car,jdbcType=TINYINT}, 
      #{building,jdbcType=TINYINT}, #{accumulationFund,jdbcType=TINYINT}, #{socialInsurance,jdbcType=TINYINT}, 
      #{lifeInsurance,jdbcType=TINYINT}, #{identyNumber,jdbcType=VARCHAR}, #{sesameCredit,jdbcType=INTEGER}, 
      #{weiLiDai,jdbcType=TINYINT}, #{applyTime,jdbcType=TIMESTAMP}, #{type,jdbcType=TINYINT}, 
      #{sourceId,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.wangku.miaodan.core.model.Order">
    insert into order_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="sum != null">
        sum,
      </if>
      <if test="vocation != null">
        vocation,
      </if>
      <if test="workTime != null">
        work_time,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="monthIncome != null">
        month_income,
      </if>
      <if test="wagesType != null">
        wages_type,
      </if>
      <if test="creditCard != null">
        credit_card,
      </if>
      <if test="car != null">
        car,
      </if>
      <if test="building != null">
        building,
      </if>
      <if test="accumulationFund != null">
        accumulation_fund,
      </if>
      <if test="socialInsurance != null">
        social_insurance,
      </if>
      <if test="lifeInsurance != null">
        life_insurance,
      </if>
      <if test="identyNumber != null">
        identy_number,
      </if>
      <if test="sesameCredit != null">
        sesame_credit,
      </if>
      <if test="weiLiDai != null">
        wei_li_dai,
      </if>
      <if test="applyTime != null">
        apply_time,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="sourceId != null">
        source_id,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        #{sum,jdbcType=DECIMAL},
      </if>
      <if test="vocation != null">
        #{vocation,jdbcType=TINYINT},
      </if>
      <if test="workTime != null">
        #{workTime,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="monthIncome != null">
        #{monthIncome,jdbcType=TINYINT},
      </if>
      <if test="wagesType != null">
        #{wagesType,jdbcType=TINYINT},
      </if>
      <if test="creditCard != null">
        #{creditCard,jdbcType=TINYINT},
      </if>
      <if test="car != null">
        #{car,jdbcType=TINYINT},
      </if>
      <if test="building != null">
        #{building,jdbcType=TINYINT},
      </if>
      <if test="accumulationFund != null">
        #{accumulationFund,jdbcType=TINYINT},
      </if>
      <if test="socialInsurance != null">
        #{socialInsurance,jdbcType=TINYINT},
      </if>
      <if test="lifeInsurance != null">
        #{lifeInsurance,jdbcType=TINYINT},
      </if>
      <if test="identyNumber != null">
        #{identyNumber,jdbcType=VARCHAR},
      </if>
      <if test="sesameCredit != null">
        #{sesameCredit,jdbcType=INTEGER},
      </if>
      <if test="weiLiDai != null">
        #{weiLiDai,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangku.miaodan.core.model.Order">
    update order_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="sum != null">
        sum = #{sum,jdbcType=DECIMAL},
      </if>
      <if test="vocation != null">
        vocation = #{vocation,jdbcType=TINYINT},
      </if>
      <if test="workTime != null">
        work_time = #{workTime,jdbcType=TINYINT},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="monthIncome != null">
        month_income = #{monthIncome,jdbcType=TINYINT},
      </if>
      <if test="wagesType != null">
        wages_type = #{wagesType,jdbcType=TINYINT},
      </if>
      <if test="creditCard != null">
        credit_card = #{creditCard,jdbcType=TINYINT},
      </if>
      <if test="car != null">
        car = #{car,jdbcType=TINYINT},
      </if>
      <if test="building != null">
        building = #{building,jdbcType=TINYINT},
      </if>
      <if test="accumulationFund != null">
        accumulation_fund = #{accumulationFund,jdbcType=TINYINT},
      </if>
      <if test="socialInsurance != null">
        social_insurance = #{socialInsurance,jdbcType=TINYINT},
      </if>
      <if test="lifeInsurance != null">
        life_insurance = #{lifeInsurance,jdbcType=TINYINT},
      </if>
      <if test="identyNumber != null">
        identy_number = #{identyNumber,jdbcType=VARCHAR},
      </if>
      <if test="sesameCredit != null">
        sesame_credit = #{sesameCredit,jdbcType=INTEGER},
      </if>
      <if test="weiLiDai != null">
        wei_li_dai = #{weiLiDai,jdbcType=TINYINT},
      </if>
      <if test="applyTime != null">
        apply_time = #{applyTime,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=TINYINT},
      </if>
      <if test="sourceId != null">
        source_id = #{sourceId,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangku.miaodan.core.model.Order">
    update order_info
    set name = #{name,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      sum = #{sum,jdbcType=DECIMAL},
      vocation = #{vocation,jdbcType=TINYINT},
      work_time = #{workTime,jdbcType=TINYINT},
      sex = #{sex,jdbcType=TINYINT},
      month_income = #{monthIncome,jdbcType=TINYINT},
      wages_type = #{wagesType,jdbcType=TINYINT},
      credit_card = #{creditCard,jdbcType=TINYINT},
      car = #{car,jdbcType=TINYINT},
      building = #{building,jdbcType=TINYINT},
      accumulation_fund = #{accumulationFund,jdbcType=TINYINT},
      social_insurance = #{socialInsurance,jdbcType=TINYINT},
      life_insurance = #{lifeInsurance,jdbcType=TINYINT},
      identy_number = #{identyNumber,jdbcType=VARCHAR},
      sesame_credit = #{sesameCredit,jdbcType=INTEGER},
      wei_li_dai = #{weiLiDai,jdbcType=TINYINT},
      apply_time = #{applyTime,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=TINYINT},
      source_id = #{sourceId,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectByCondition" parameterType="com.wangku.miaodan.web.SearchBean" resultMap="BaseResultMap">
      select 
		id,
		name,
		city,
		age,
		sum,
		vocation,
		work_time,
		sex,
		identy_number,
		month_income,
		wages_type,
		credit_card,
		car,
		building,
		accumulation_fund,
		social_insurance,
		life_insurance,
		sesame_credit,
		wei_li_dai,
		apply_time,
		type,
		source_id,
		status,
		add_time       
      from   order_info 
      where 1 = 1 
      <if test="type == 1">
      	and apply_time >= #{nowDate}
      </if>
      <if test="type == 2">
      	and apply_time &lt; #{nowDate}
      </if>
      <if test="vocation != null">
      	and vocation =#{vocation}
      </if>
      <if test="type == 3">
      	and apply_time &lt; #{now} 
      </if>
      <if test="status != null">
      	and status = #{status}
      </if>
      <if test="sumStart != null and sumStart > 0">
      	and sum >= #{sumStart}
      </if>
      <if test="sumEnd != null and sumEnd > 0">
        and sum lte; #{sumEnd}
      </if>
      <if test="city != null and city != '' and city != '全国'">
      	and city like concat(#{city}, "%") 
      </if>
      <if test="car != null and car != ''">
      	and car in 
      	<foreach collection="carList" open="(" separator="," close=")" item="car">
      		#{car}
      	</foreach>
      </if>
      <if test="building != null and building != ''">
      	and building in 
      	<foreach collection="buildingList" open="(" separator="," close=")" item="building">
      		#{building}
      	</foreach>
      </if>
      <if test="lifeInsurance != null and lifeInsurance != ''">
      	and life_insurance in 
      	<foreach collection="lifeInsuranceList" open="(" separator="," close=")" item="life">
      		#{life}
      	</foreach>      	
      </if>
      <if test="weiLiDai != null">
      	and wei_li_dai = #{weiLiDai}
      </if>
      <if test="creditCard != null">
      	and credit_card = #{creditCard}
      </if>
      <if test="accumulationFund != null and accumulationFund != ''">
      	and accumulation_fund in 
       	<foreach collection="accumulationFundList" open="(" separator="," close=")" item="acc">
      		#{acc}
      	</foreach>     	
      </if>
      <if test="socialInsurance != null and socialInsurance != ''">
      	and social_insurance in 
       	<foreach collection="socialInsuranceList" open="(" separator="," close=")" item="social">
      		#{social}
      	</foreach>      	
      </if>
      <if test="wagesType != null">
      	and wages_type = #{wagesType}
      </if>
      <if test="workTime != null">
      	and work_time = #{workTime}
      </if>
      <if test="monthIncome != null">
      	and month_income = #{monthIncome}
      </if>
      <if test="sortBy == null or sortBy == 'applyTime'">
      	order by apply_time
      </if>
	  <if test="sort == 'desc'">
	  	desc
	  </if>
	  <if test="sort == 'asc'">
	  	asc 
	  </if>	
      limit #{page}, #{size}
  </select>
  
  <select id="selectBySourceIdAndType" resultMap="BaseResultMap">
  	select * from order_info
  	where source_id = #{sourceId} and type = #{type}
 	limit 1
  </select>  
  
  <update id="counsumeOrder" >
  	update order_info set status = 1
  	where id = #{id} and status = 0
  </update>
  
  <select id="getStoredByUser" resultMap="BaseResultMap">
	select 
	oi.id, oi.name, oi.city,
	oi.age, oi.sum, oi.vocation, oi.work_time, oi.sex,
	oi.identy_number, oi.month_income, oi.wages_type,
	oi.credit_card, oi.car, oi.building, oi.accumulation_fund,
	oi.social_insurance, oi.life_insurance, oi.sesame_credit,
	oi.wei_li_dai, oi.apply_time, oi.type, oi.source_id,
	oi.status, oi.add_time, os.add_time saddTime
	from order_info oi
	LEFT JOIN order_stored os
	ON oi.id = os.order_id 
	where oi.id in (select order_id from order_stored where mobile = #{mobile})
	order by saddTime desc   	
  </select>
  
  <select id="selectByMobileAndId" resultType="Integer">
	select count(*) from order_stored where mobile = #{mobile} and order_id = #{id}
  </select>
  
  <insert id="saveBatch">
    insert into order_info (name, mobile, 
      city, age, sum, vocation, 
      work_time, sex, month_income, 
      wages_type, credit_card, car, 
      building, accumulation_fund, social_insurance, 
      life_insurance, identy_number, sesame_credit, 
      wei_li_dai, apply_time)
    values 
    <foreach collection="list" item="order" separator=",">
		  (#{order.name,jdbcType=VARCHAR}, #{order.mobile,jdbcType=VARCHAR}, 
	      #{order.city,jdbcType=VARCHAR}, #{order.age,jdbcType=INTEGER}, #{order.sum,jdbcType=DECIMAL}, #{order.vocation,jdbcType=TINYINT}, 
	      #{order.workTime,jdbcType=TINYINT}, #{order.sex,jdbcType=TINYINT}, #{order.monthIncome,jdbcType=TINYINT}, 
	      #{order.wagesType,jdbcType=TINYINT}, #{order.creditCard,jdbcType=TINYINT}, #{order.car,jdbcType=TINYINT}, 
	      #{order.building,jdbcType=TINYINT}, #{order.accumulationFund,jdbcType=TINYINT}, #{order.socialInsurance,jdbcType=TINYINT}, 
	      #{order.lifeInsurance,jdbcType=TINYINT}, #{order.identyNumber,jdbcType=VARCHAR}, #{order.sesameCredit,jdbcType=INTEGER}, 
	      #{order.weiLiDai,jdbcType=TINYINT}, #{order.applyTime,jdbcType=TIMESTAMP})    
    </foreach>  	
  </insert>  
  
  <select id="list" resultMap="BaseResultMap">
  	select * from order_info 
  	order by apply_time desc 
  	limit #{start}, #{size}
  </select>
    
</mapper>